
@{
    ViewData["Title"] = "Chat";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="@Url.Content("~/css/app.css")">

@section scripts {

    <script type="text/javascript">
        var streamUri = '@ViewBag.chatinformation.EventStreamUri';
        var queuename = '@ViewBag.client.queuename';
        var firstname = '@ViewBag.client.firstname';
        var lastname = '@ViewBag.client.lastname';
        var jwt = '@ViewBag.jwt';
        var token = '@ViewBag.token';
        var memberid = '@ViewBag.chatinformation.Member.Id';
        var host = '@ViewBag.host';
        var api = '@ViewBag.api';
        var chatInfoId = '@ViewBag.chatinformation.Id';
        var content_type = '@ViewBag.content_type';
        var tableid = '@ViewBag.tableid';

        var rowindex = '@ViewBag.newIndex';

        var agentname = '';
        var agentimageUrl = '';
        var agentid = '';

        window.onload = function () {
            // Get references to elements on the page.
            var form = document.getElementById('message-form');
            var messageField = document.getElementById('message');
            var messagesList = document.getElementById('messages');
            var socketStatus = document.getElementById('status');
            var closeBtn = document.getElementById('close');
            var clientid = '@ViewBag.chatinformation.Member.Id';

            // Create a new WebSocket.
            var socket = new WebSocket(streamUri);

            // Handle any errors that occur.
            socket.onerror = function (error) {
                console.log('WebSocket Error: ' + error);
            };

            // Show a connected message when the WebSocket is opened.
            socket.onopen = function(event) {
                @*socketStatus.innerHTML = 'Connected to: >' + event.currentTarget.URL + '<' + @ViewBag.client.queuename;*@
                socketStatus.innerHTML = 'Connected to: > ' + queuename;
                socketStatus.className = 'open';
            };

            // Handle messages sent by the server.
            socket.onmessage = function (event) {
                var message = event.data;
                var obj = JSON.parse(message);

                if (obj.eventBody.bodyType == "member-join") {
                    GetAgentData();
                }

                if (obj.eventBody.sender.id != clientid) {
                    if (obj.eventBody.bodyType == "standard") {
                        messagesList.innerHTML += '<li class="received"><img src="' + agentimageUrl + '"><span>' + agentname + ': </span>' + obj.eventBody.body + '</li>';
                    } else if (obj.eventBody.bodyType == "notice") {
                        messagesList.innerHTML += '<li class="received" align="center"><span>' + obj.eventBody.body + '</span></li>';
                    } else if (obj.metadata.type == "typing-indicator") {
                        $('#typerDisplay').text( 'Agent is typing...');
                        $('.chat__typing').fadeIn(100, function() {
                            $('.chat__type__body').addClass('typing_display__open');
                        }).delay(1000).fadeOut(300, function(){
                            $('.chat__type__body').removeClass('typing_display__open');
                        });
                    }
                }

                if (obj.eventBody.member.state == "DISCONNECTED" && obj.eventBody.member.id == agentid) {
                    messagesList.innerHTML += '<li class="received"><img src="' + agentimageUrl + '"><span>' + agentname + ': </span> El agente se desconecto </li>';
                }
            };

            // Show a disconnected message when the WebSocket is closed.
            socket.onclose = function(event) {
                socketStatus.innerHTML = 'Disconnected from ' + queuename + '.';
                socketStatus.className = 'closed';
                //UpdateChatSession();
                EndSession();
            };

            // Send a message when the form is submitted.
            form.onsubmit = function(e) {
                e.preventDefault();

                // Retrieve the message from the textarea.
                var message = messageField.value;

                // Send the message through the WebSocket.
                socket.send(message);
                    SendMessage();

                // Add the message to the messages list.
                messagesList.innerHTML += '<li class="sent"><span>' + firstname + ' ' + lastname + ':</span>' + message + '</li>';

                // Clear out the message field.
                messageField.value = "";
                return false;
            };


          // Close the WebSocket connection when the close button is clicked.
            closeBtn.onclick = function(e) {
                e.preventDefault();
                // Close the WebSocket.
                socket.close();
                return false;
            };

        };

        // OK
        function SendMessage() {
            var messagetosend = $('#message').val();
            $.ajax({
                url: '/Chat/SendMessage',
                type: 'get',
                data: { messagetosend: messagetosend, chatInfoId: chatInfoId, MemberId: memberid, token: jwt, content_type : content_type, api : api, host : host },
                datatype: 'json'
            }).done(function () {

            })
        }

        // OK
        function GetAgentData() {
            $.ajax({
                url: '/Chat/GetAgentData',
                type: 'get',
                data: { chatInfoId: chatInfoId, token: jwt, content_type : content_type, api : api, host : host },
                datatype: 'json'
            }).done(function (response) {
                var dataagent = JSON.parse(response)
                agentname = dataagent[0]
                agentimageUrl = dataagent[1]
                agentid = dataagent[2]
            })
        }

        function EndSession() {
            $.ajax({
                url: '/Chat/EndSession',
                type: 'get',
                data: { chatInfoId: chatInfoId, MemberId: memberid, jwt : jwt, content_type : content_type, api : api, host : host },
                datatype: 'json'
            }).done(function () {

            })
        }

        function UpdateChatSession() {
            $.ajax({
                url: '/Chat/UpdateChatSessionAsync',
                type: 'get',
                data: { id: tableid, rowindex: rowindex, token: token, content_type : content_type, api : api, host : host },
                datatype: 'json'
            }).done()
        }




    </script>

}

@*<header>
    <nav class="navbar navbar-light bg-light justify-content-end">
        <a class="nav-link" asp-controller="Chat" asp-action="LogOut"><i class="glyphicon glyphicon-log-out"></i>Home</a>
    </nav>
</header>*@

@*<div class="container">
        <a class="nav-link" onclick="Test()"><i class="glyphicon-log-out"></i>UpdateChatSession</a>
    </div>*@

<!-- Chat Body -->
<div class="container-fluid general">
    <div class="row">
        <h1>Live Chat - 5Dimes</h1>
    </div>
    <div class="row">
        <div id="status">Connecting...</div>
    </div>
    <div class="row">
        <div class="col-xl-12">
            <ul id="messages"></ul>
        </div>
    </div>
    <div class="row">
        <form id="message-form" action="#" method="post" class="col-xl-12">
            <textarea id="message" placeholder="Write your message here..." required></textarea>
            <button type="submit">Send Message</button>
            <button type="button" id="close">Close Chat</button>
        </form>
    </div>
    <div class="row">
        <div class="chat__typing">
            <span id="typerDisplay"></span>
        </div>
    </div>
</div>
@*<script src="app.js"></script>*@
