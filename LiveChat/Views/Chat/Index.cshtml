
@{
    ViewData["Title"] = "Chat";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="@Url.Content("~/css/app.css")">

@section scripts {

    <script type="text/javascript">
        window.onload = function () {
            // Get references to elements on the page.
            var form = document.getElementById('message-form');
            var messageField = document.getElementById('message');
            var messagesList = document.getElementById('messages');
            var socketStatus = document.getElementById('status');
            var closeBtn = document.getElementById('close');
            var clientid = '@ViewBag.chatinformation.Member.Id';

            // Create a new WebSocket.
            var socket = new WebSocket('@ViewBag.chatinformation.EventStreamUri');

            // Handle any errors that occur.
            socket.onerror = function (error) {
                console.log('WebSocket Error: ' + error);
            };

            // Show a connected message when the WebSocket is opened.
            socket.onopen = function(event) {
                @*socketStatus.innerHTML = 'Connected to: >' + event.currentTarget.URL + '<' + @ViewBag.client.queuename;*@
                socketStatus.innerHTML = 'Connected to: > ' + '@ViewBag.client.queuename';
                socketStatus.className = 'open';
            };

            // Handle messages sent by the server.
            socket.onmessage = function (event) {
                var message = event.data;
                var obj = JSON.parse(message);

                if (obj.eventBody.sender.id != clientid) {
                    //messagesList.innerHTML += '<li class="received"><span>Received:</span>NO SON iguales ' + obj.eventBody.sender.id + ' != ' + clientid + '</li>';
                    if (obj.eventBody.bodyType == "standard") {
                        messagesList.innerHTML += '<li class="received"><span>Received:</span>' + obj.eventBody.body + '</li>';
                    } else if (obj.eventBody.bodyType == "notice") {
                        messagesList.innerHTML += '<li class="received"><span>' + obj.eventBody.body + '</span></li>';                        
                    } else if (obj.metadata.type == "typing-indicator") {
                        $('#typerDisplay').text( 'Agent is typing...');
                        $('.chat__typing').fadeIn(100, function() {
                            $('.chat__type__body').addClass('typing_display__open');
                        }).delay(1000).fadeOut(300, function(){
                            $('.chat__type__body').removeClass('typing_display__open');
                        });
                    }
                } else {
                    //messagesList.innerHTML += '<li class="received"><span>Received:</span>iguales ' + obj.eventBody.sender.id + ' = ' + clientid + '</li>';
                }


            };

            // Show a disconnected message when the WebSocket is closed.
            socket.onclose = function(event) {
                socketStatus.innerHTML = 'Disconnected from @ViewBag.client.queuename.';
                socketStatus.className = 'closed';
            };

            // Send a message when the form is submitted.
            form.onsubmit = function(e) {
                e.preventDefault();

                // Retrieve the message from the textarea.
                var message = messageField.value;

                // Send the message through the WebSocket.
                socket.send(message);
                SendMessage();

                // Add the message to the messages list.
                messagesList.innerHTML += '<li class="sent"><span>@ViewBag.client.firstname @ViewBag.client.lastname:</span>' + message + '</li>';

                // Clear out the message field.
                messageField.value = '';

            return false;
            };


          // Close the WebSocket connection when the close button is clicked.
            closeBtn.onclick = function(e) {
                e.preventDefault();
                // Close the WebSocket.
                socket.close();
                return false;
            };

        };
    </script>

    <script src="https://sdk-cdn.mypurecloud.com/javascript-guest/5.2.0/purecloud-guest-chat-client.min.js"></script>
    <script type="text/javascript">
        function SendMessage() {
            var messagetosend = $('#message').val();
            $.ajax({
                url: '/Chat/SendMessage',
                type: 'get',
                data:
                {
                    messagetosend: messagetosend, chatInfoId: '@ViewBag.chatinformation.Id', MemberId: '@ViewBag.chatinformation.Member.Id', token: '@ViewBag.jwt',
                    content_type : '@ViewBag.content_type', api : '@ViewBag.api', host : '@ViewBag.host'
                },
                datatype: 'json'
            }).done(function () {

            })
        }

        function GetAgentData() {
            $.ajax({
                url: '/Chat/GetAgentData',
                type: 'get',
                data:
                {
                    chatInfoId: '@ViewBag.chatinformation.Id', MemberId: '@ViewBag.chatinformation.Member.Id', token: '@ViewBag.token',
                    content_type : '@ViewBag.content_type', api : '@ViewBag.api', host : '@ViewBag.host'
                },
                datatype: 'json'
            }).done(function () {

            })
        }

        function GetMessage(message) {
            $.ajax({
                url: '/Chat/GetMessage',
                type: 'get',
                data: { incommingmessage: message },
                datatype: 'json'
            }).done(function () {

            })
        }


    </script>

}

<header>
    <nav class="navbar navbar-light bg-light justify-content-end">
        <a class="nav-link" asp-controller="Chat" asp-action="LogOut"><i class="glyphicon glyphicon-log-out"></i>Log Out</a>
    </nav>
</header>
<!-- Chat Body -->
<div class="container-fluid general">
    <div class="row">
        <h1>Live Chat - 5Dimes</h1>
    </div>
    <div class="row">
        <div id="status">Connecting...</div>
    </div>
    <div class="row" style="max-height:300px">
        <div class="col-xl-12">
            <ul id="messages"></ul>
        </div>
    </div>
    <div class="row">
        <form id="message-form" action="#" method="post" class="col-xl-12">
            <textarea id="message" placeholder="Write your message here..." required></textarea>
            <button type="submit">Send Message</button>
            <button type="button" id="close">Close Connection</button>
        </form>
    </div>
    <div class="row">
        <div class="chat__typing col-xl-12">
            <span id="typerDisplay"></span>
        </div>
    </div>
</div>
@*<script src="app.js"></script>*@
